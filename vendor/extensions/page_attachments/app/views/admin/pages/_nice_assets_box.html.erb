<div id="nice_assets_box">
  <h3>Attachments <%= image_tag('admin/plus.png', :id => "add_nice_asset") %></h3>
  <div id="uploader">
    <div><%= label_tag :upload_title, 'Title' %><%= text_field_tag :upload_title %><div id="nice_assets_uploader"></div></div>
  </div> <!-- #uploader -->
  <div class="attachments">
    <ul id="nice_assets">
      <%= render :partial => 'nice_asset', :collection => @page.page_attachments %>
    </ul>
    <div class="clear"></div>
  </div>
</div>

<script type="text/javascript" charset="utf-8">

        // window.AUTH_TOKEN = '#{form_authenticity_token}'; // Fix rails authentication issue
        // 
        // jQuery(document).ajaxSend(function(event, request, settings) {
        //   if (typeof(window.AUTH_TOKEN) == "undefined") return;
        //   // IE6 fix for http://dev.jquery.com/ticket/3155
        //   if (settings.type == 'GET' || settings.type == 'get') return;
        // 
        //   settings.data = settings.data || "";
        //   settings.data += (settings.data ? "&" : "") + "authenticity_token=" + encodeURIComponent(window.AUTH_TOKEN);
        // });

        // Ajax.Base.prototype.initialize = Ajax.Base.prototype.initialize.wrap(
        //    function(p, options){
        //      p(options);
        //      this.options.parameters = this.options.parameters || {};
        //      this.options.parameters.authenticity_token = window._token || '';
        //    }
        // );

  <%- session_key_name = ActionController::Base.session_options[:session_key] -%>
  jQuery(document).ready(function() {
    jQuery("#add_nice_asset").mouseup(function() {
      <%- if @page.id -%>
        jQuery("#uploader").modal();
      <%- else -%>
        alert('You must first save this page before you can upload files to it.');
      <%- end -%>
    });
    
    <%- if @page.id -%>
      jQuery("#nice_assets .delete").mouseup(function() {
        var id = jQuery($(this).next()).val();
        jQuery.post("/page_attachments/delete_from_page/" + id, { page_id: <%= @page.id %> },
          function(data){
            jQuery('input[type=hidden][value='+id+']').closest('li').remove();
            // alert(jQuery($(this)).text());
            // jQuery(this).parentNode.parentNode.parentNode.remove();
            // alert('fuck me');
        });
      });
    <%- end -%>
    
    jQuery('#nice_assets_uploader').uploadify({
      'uploader': '/images/extensions/nice_assets/uploadify.swf',
      'script': '/page_attachments/create',
      'folder': '/path/to/uploads-folder',
      'cancelImg': '/images/extensions/nice_assets/cancel.png',
      'auto': true,
      'fileDataName': 'uploaded_data',
      'buttonImg': '/images/extensions/nice_assets/choose_file.png',
      'scriptData': {
        // '_method': 'put',
        '<%= session_key_name %>' : '<%= u cookies[session_key_name] %>',
        'authenticity_token'  : '<%= u form_authenticity_token if protect_against_forgery? %>',
        'page_id' : '<%= @page.id %>',
        'user_id' : '<%= current_user.id %>',
        'title' : ''
      },
      'onComplete': function(event, queueID, fileObj, response, data) {
        // alert(event + " :: " + queueID + " :: " + fileObj + " :: " + response + " :: " + data);
        jQuery('#nice_assets').append(response);
        var attachments_count = jQuery('#nice_assets li').length;
        jQuery("#attachments_count").text('(' + attachments_count + ')');
           // $('#filesUploaded').append('<a href='+fileObj.filePath+'>'+response+'</a><br>');
        jQuery('#upload_title').val('');
      }
    });
    
    jQuery('#upload_title').keyup(function() {
      jQuery('#nice_assets_uploader').uploadifySettings('scriptData', {'title' : jQuery('#upload_title').val() });
    });
    
  });
</script>

<script type="text/javascript" charset="utf-8">
  function insertAsset(elem, image) {
    // var parts = $('pages').getElementsByClassName('page');
    var pages = $$('#pages .page');
    var parts = $$('#pages .part');
    for (i = 0; i < parts.length; i++) {
     if (pages[i].getStyle('display') != 'none') {
       var filter = parts[i].getElementsByTagName('select')[0];
       var textarea = parts[i].getElementsByTagName('textarea')[0];
       if (image == true) {
         answer = confirm("Insert with link to original file?");
         if (answer) {
           var content = elem.readAttribute('rel_with_link');
         } else {
           var content = elem.readAttribute('rel');
         }
       } else {
         var content = elem.getAttribute('rel');
       }
       if (filter.value == 'TinyMce') {
         tinyMCE.execCommand('mceInsertContent',false,content);
       } else {
         textarea.focus();
         insertAtCursor(textarea, content);
       }
     }
    }
  }
  
  function insertAtCursor(myField, myValue) {
    //IE support
    if (document.selection) {
      myField.focus();
      sel = document.selection.createRange();
      sel.text = myValue;
    }

    //MOZILLA/NETSCAPE support
    else if (myField.selectionStart || myField.selectionStart == '0') {
      var startPos = myField.selectionStart;
      var endPos = myField.selectionEnd;
      myField.value = myField.value.substring(0, startPos)
                    + myValue
                    + myField.value.substring(endPos, myField.value.length);
    } else {
      myField.value += myValue;
    }
  }
  
</script>